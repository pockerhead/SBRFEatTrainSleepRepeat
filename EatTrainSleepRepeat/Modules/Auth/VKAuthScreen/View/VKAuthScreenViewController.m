//
//  VKAuthScreenViewController.m
//  EatTrainSleepRepeat
//
//  Created pockerhead on 18/05/2019.
//  Copyright Â© 2019 pockerhead. All rights reserved.
//
//  Template generated by Balashov Artem @pockerhead
//

#import "VKAuthScreenViewController.h"
#import "UIView+Constraints.h"
#import <WebKit/WebKit.h>
#import <UIKit/UIKit.h>
#import "Alertable.h"
#import "UIViewController+Alertable.h"

@interface VKAuthScreenViewController () <VKAuthScreenView, WKUIDelegate, WKNavigationDelegate, Alertable>

@property (strong, nonatomic) WKWebView *webView;

@end

@implementation VKAuthScreenViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    [self configureUI];
    [self.presenter viewDidLoad];
}

- (void)configureUI {
    [self configureWebView];
    
    UIBarButtonItem *dismissButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemStop target:self action:@selector(didSelectDismissButton)];
    self.navigationItem.leftBarButtonItem = dismissButton;
}

- (void)didSelectDismissButton
{
    [self.presenter didSelectDismissButton];
}

- (void)configureWebView
{
    WKPreferences *preferences = [WKPreferences new];
    preferences.javaScriptEnabled = YES;
    WKWebViewConfiguration *configuration = [WKWebViewConfiguration new];
    configuration.preferences = preferences;
    
    self.webView = [[WKWebView alloc] initWithFrame:CGRectZero configuration:configuration];
    [self.view addSubview:self.webView];
    [self.webView fillSuperview];
    self.webView.UIDelegate = self;
    self.webView.navigationDelegate = self;
}

- (void)displayURL:(nonnull NSURL *)url {
    [self.webView loadRequest:[NSURLRequest requestWithURL:url]];
}

- (WKWebView *)webView:(WKWebView *)webView createWebViewWithConfiguration:(WKWebViewConfiguration *)configuration forNavigationAction:(WKNavigationAction *)navigationAction windowFeatures:(WKWindowFeatures *)windowFeatures
{
    return self.webView;
}

- (void)webView:(WKWebView *)webView decidePolicyForNavigationAction:(WKNavigationAction *)navigationAction decisionHandler:(void (^)(WKNavigationActionPolicy))decisionHandler
{
    [self.presenter didFinishLoadWithURL:navigationAction.request.URL];
    NSLog(@"%@", navigationAction.request.URL.absoluteString);
    decisionHandler(WKNavigationActionPolicyAllow);
}

- (void)webView:(WKWebView *)webView decidePolicyForNavigationResponse:(WKNavigationResponse *)navigationResponse decisionHandler:(void (^)(WKNavigationResponsePolicy))decisionHandler
{
    [self.presenter didFinishLoadWithURL:navigationResponse.response.URL];
    NSLog(@"%@", navigationResponse.response.URL.absoluteString);
    decisionHandler(WKNavigationResponsePolicyAllow);
}

- (void)displayError:(ErrorDTO *)error
{
    [self displayAlertWithMessage:error.message completion:^{
        [self.presenter didSelectDismissButton];
    }];
}

- (void)displaySuccesfullText:(NSString *)text
{
    [self displayAlertWithMessage:text completion:^{
        [self.presenter didSelectDismissButton];
    }];
}


@end
