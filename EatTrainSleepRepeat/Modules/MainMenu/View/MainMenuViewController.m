//
//  MainMenuViewController.m
//  EatTrainSleepRepeat
//
//  Created pockerhead on 21/04/2019.
//  Copyright © 2019 pockerhead. All rights reserved.
//
//  Template generated by Balashov Artem @pockerhead
//

#import "MainMenuViewController.h"
#import <UIKit/UIKit.h>
#import "UIView+Constraints.h"

@interface MainMenuViewController () <MainMenuView, UITableViewDelegate, UITableViewDataSource>

@property (nonatomic, strong) UITableView *tableView;
@property (nonatomic, strong) NSArray <MainMenuDataMediator *>*dataSource;

@end

@implementation MainMenuViewController

- (void)viewDidLoad
{
    [super viewDidLoad];
    [self configureUI];
    [self.presenter viewDidLoad];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self.presenter viewWillAppear];
}

- (void)configureUI {
    self.navigationItem.title = @"Сегодня";
    self.navigationController.navigationBar.prefersLargeTitles = YES;
    [self configureTableView];
}

- (void)configureTableView
{
    self.tableView = [UITableView new];
    [self.view addSubview:self.tableView];
    [self.tableView fillSuperview];
    self.tableView.delegate = self;
    self.tableView.delaysContentTouches = NO;
    self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    self.tableView.contentInset = UIEdgeInsetsMake(0, 0, 30, 0);
    self.tableView.dataSource = self;
    [self.tableView registerClass:[MainMenuCell class] forCellReuseIdentifier:NSStringFromClass([MainMenuCell class])];
    [self.tableView registerClass:[MainMenuHeader class] forHeaderFooterViewReuseIdentifier:NSStringFromClass([MainMenuHeader class])];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    MainMenuCell *cell = [self.tableView dequeueReusableCellWithIdentifier:NSStringFromClass([MainMenuCell class])];
    if (indexPath.section < self.dataSource.count && indexPath.row < self.dataSource[indexPath.section].rows.count)
    {
        MainMenuCellViewModel *viewModel = self.dataSource[indexPath.section].rows[indexPath.row];
        [cell configureWithViewModel:viewModel];
    }
    return cell;
}

- (void)setDataSource:(NSArray<MainMenuDataMediator *> *)dataSource
{
    _dataSource = dataSource;
    [self.tableView reloadData];
}

- (void)displayMenu:(NSArray<MainMenuDataMediator *> *)viewModels
{
    self.dataSource = viewModels;
}



- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return UITableViewAutomaticDimension;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    if (section < self.dataSource.count) {
        MainMenuHeaderViewModel *viewModel = self.dataSource[section].sectionHeader;
        MainMenuHeader *header = [self.tableView dequeueReusableHeaderFooterViewWithIdentifier:NSStringFromClass([MainMenuHeader class])];
        [header configureWithViewModel:viewModel];
        return header;
    }
    return [UIView new];
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return UITableViewAutomaticDimension;
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section
{
    return [UIView new];
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 0.01;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (self.dataSource == nil)
    {
        return 0;
    }
    return self.dataSource[section].rows.count;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    if (self.dataSource == nil)
    {
        return 0;
    }
    return self.dataSource.count;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [self.presenter didSelectRowAt:indexPath];
}

@end
